AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Toro AI Assistant - Backend serverless para responder perguntas sobre investimentos

Globals:
  Function:
    Runtime: python3.11
    Timeout: 30
    MemorySize: 256
    Environment:
      Variables:
        TABLE_NAME: !Ref QuestionsTable
        PROCESS_TOPIC: !Ref ProcessTopic
        NOTIFY_TOPIC: !Ref NotifyTopic
        PYTHONPATH: ./lib

Resources:
  # Funções Lambda
  IngestFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../src/questions/ingest/
      Handler: handler.lambda_handler
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /questions
            Method: post
      Environment:
        Variables:
          SNS_TOPIC: !Ref ProcessTopic
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref QuestionsTable
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt ProcessTopic.TopicName

  # DynamoDB
  QuestionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: toro-ai-assistant-questions
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  # Tópicos SNS
  ProcessTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: toro-ai-assistant-process-topic

  NotifyTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: toro-ai-assistant-notify-topic

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/questions"
  QuestionsTable:
    Description: "Tabela DynamoDB para perguntas e respostas"
    Value: !Ref QuestionsTable
